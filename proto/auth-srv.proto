syntax = "proto3";

package abaeve.auth;

service UserAuthentication {
    //Called by the auth-web to state someone has started the auth process
    rpc Create (AuthCreateRequest) returns (AuthCreateResponse) {
    };
    //Called by the auth-bot or another system to state that they've linked a character to their account
    rpc Confirm (AuthConfirmRequest) returns (AuthConfirmResponse) {
    };
}

service UserAuthenticationAdmin {
    rpc UserRoleAdd (AuthAdminRequest) returns (AuthAdminResponse) {
    };
    rpc UserRoleRemove (AuthAdminRequest) returns (AuthAdminResponse) {
    };
    rpc CorporationAllianceRoleAdd (AuthAdminRequest) returns (AuthAdminResponse) {
    };
    rpc CorporationAllianceRoleRemove (AuthAdminRequest) returns (AuthAdminResponse) {
    };
    rpc CorporationRoleAdd (AuthAdminRequest) returns (AuthAdminResponse) {
    };
    rpc CorporationRoleRemove (AuthAdminRequest) returns (AuthAdminResponse) {
    };
    rpc AllianceRoleAdd (AuthAdminRequest) returns (AuthAdminResponse) {
    };
    rpc AllianceRoleRemove (AuthAdminRequest) returns (AuthAdminResponse) {
    };
}

message AuthCreateRequest {
    string Token = 1;
    Character Character = 2;
    Corporation Corporation = 3;
    Alliance Alliance = 4;
    repeated string AuthScope = 5;
}

message AuthCreateResponse {
    string AuthenticationCode = 1;
    bool Success = 2;
}

message AuthConfirmRequest {

    string AuthenticationCode = 4;
}

message AuthConfirmResponse {
    bool Success = 1;
}

message AuthAdminRequest {
    int64 EntityId = 1;
    string EntityName = 2;
    string Role = 3;
}

message AuthAdminResponse {
    int64 EntityId = 1;
    string EntityName = 2;
    bool Success = 3;
}

message Character {
    int64 Id = 1;
    string Name = 2;
}

message Corporation {
    int64 Id = 1;
    string Name = 2;
    string Ticker = 3;
}

message Alliance {
    int64 Id = 1;
    string Name = 2;
    string Ticker = 3;
}
